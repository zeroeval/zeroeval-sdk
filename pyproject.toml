[project]
name = "zeroeval"
version = "0.2.4"
description = "ZeroEval SDK"
readme = "README.md"
authors = [
    {name = "Sebastian Crossa", email = "seb@zeroeval.com"},
]
keywords = [
    "evaluation",
    "LLM",
    "observability",
]
requires-python = ">=3.9,<4.0"
dependencies = [
    "rich >=13.9.4, <14.0.0",
    "opentelemetry-api >=1.30.0, <2.0.0",
    "opentelemetry-sdk >=1.30.0, <2.0.0",
    "requests >=2.32.3, <3.0.0",
    "openai >=1.82.0, <2.0.0",
    "pillow >=10.0.0, <11.0.0",
    "aiohttp >=3.8.0, <4.0.0",
]

[project.urls]
repository = "https://github.com/zeroeval"

[project.scripts]
zeroeval = "zeroeval.cli:main"

[dependency-groups]
dev = [
    "pytest >=8.2.2, <9.0.0",
    "pytest-asyncio >=0.23.7, <1.0.0",
    "ruff >=0.12.2, <1.0.0",
    "mypy >=1.8.0, <2.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/zeroeval"]

[tool.uv]
default-groups = []

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",                    # Show test summary info
    "--strict-markers",       # Ensure all markers are defined
    "--tb=short",            # Shorter tracebacks
    "-v",                    # Verbose output
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "core: Core SDK functionality tests",
    "compatibility: Python version compatibility tests",
    "observability: Observability system tests",
    "slow: Tests that take more than 5 seconds",
]

[tool.ruff]
# Set target Python version
target-version = "py39"

# Set the maximum line length to 88 (Black's default)
line-length = 88

# Exclude directories and files
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Enable rule categories
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "PIE",   # flake8-pie
    "SIM",   # flake8-simplify
    "RET",   # flake8-return
    "TCH",   # flake8-type-checking
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "ERA",   # eradicate
    "PL",    # pylint
    "PERF",  # perflint
    "RUF",   # ruff-specific rules
]

# Ignore specific rules
ignore = [
    "E501",   # line too long (handled by formatter)
    "PLR0913", # too many arguments
    "PLR0915", # too many statements
    "PLR2004", # magic value used in comparison
    "RET504",  # unnecessary assignment before return
    "SIM108",  # use ternary operator instead of if-else
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
known-first-party = ["zeroeval"]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces, rather than tabs
indent-style = "space"

# Respect magic trailing comma
skip-magic-trailing-comma = false

# Automatically detect the appropriate line ending
line-ending = "auto"

[tool.mypy]
# Target Python version
python_version = "3.9"

# Directories to check
files = ["src/zeroeval"]

# Strict mode (gradually enable)
strict = false
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true

# Error output
show_error_codes = true
show_error_context = true
pretty = true

# Import behavior
ignore_missing_imports = true
follow_imports = "normal"

# Disable specific checks that are too strict for now
disable_error_code = ["import-untyped"]

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true
